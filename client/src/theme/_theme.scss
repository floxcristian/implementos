// Herramientas que facilitan la creación de un custom palette:
// + https://material.io/resources/color
// + http://mcg.mbitson.com

@use '~@angular/material' as mat;
@import './_palette.scss';

@include mat.core();

// Creamos variables a partir de nuestra paleta de colores personalizados usando el método define-palette.
$custom-primary: mat.define-palette($color-primary);
$custom-accent: mat.define-palette($color-warning);
// Colores adicionales a los propios de material
$custom-success: mat.define-palette($color-success);
$custom-danger: mat.define-palette($color-danger);

// Hacemos la construcción de un light-theme usando el método define-light-theme.
// En base al tipo de theme construido (light o dark), se escogerá un tono u otro.
$custom-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $custom-primary,
      accent: $custom-accent
    )
  )
);

// Hacemos disponibles los colores como atributos de los componentes de material (<button mat-button color="my-color">).
.mat-success {
  background-color: mat-color($custom-success, 500) !important;
  color: mat-contrast($custom-success, 900) !important;
}

.mat-danger {
  background-color: mat-color($custom-success, 500) !important;
  color: mat-contrast($custom-success, 900) !important;
}

// Este mixin emite estilos para los más de 35 componentes de Angular Material, por lo que,
// a menos que utilicemos todos los componentes, esto generará CSS innecesario.
@include mat.all-component-themes($custom-light-theme);
